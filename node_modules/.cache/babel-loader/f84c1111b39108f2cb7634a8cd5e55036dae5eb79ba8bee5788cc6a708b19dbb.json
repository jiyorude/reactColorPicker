{"ast":null,"code":"var _jsxFileName = \"/Users/arcticlime/reactcolorpicker/src/ColorInput.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorInput = _ref => {\n  let {\n    colorVal,\n    setColorVal,\n    isDarkText,\n    setIsDarkText\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => e.preventDefault(),\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Type Color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type Color\",\n      required: true,\n      value: colorVal,\n      onChange: e => {\n        setColorVal(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      id: \"txtcolor\",\n      onClick: () => setIsDarkText(!isDarkText),\n      children: \"Invert Text Color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = ColorInput;\nexport default ColorInput;\nvar _c;\n$RefreshReg$(_c, \"ColorInput\");","map":{"version":3,"names":["React","ColorInput","colorVal","setColorVal","isDarkText","setIsDarkText","e","preventDefault","target","value"],"sources":["/Users/arcticlime/reactcolorpicker/src/ColorInput.js"],"sourcesContent":["import React from \"react\";\n\nconst ColorInput = ({ colorVal, setColorVal, isDarkText, setIsDarkText }) => {\n  return (\n    <form onSubmit={(e) => e.preventDefault()}>\n      <label>Type Color</label>\n      <input\n        type=\"text\"\n        placeholder=\"Type Color\"\n        required\n        value={colorVal}\n        onChange={(e) => {\n          setColorVal(e.target.value);\n        }}\n      />\n      <button type=\"button\" id=\"txtcolor\" onClick={() => setIsDarkText(!isDarkText)}>\n        Invert Text Color\n      </button>\n    </form>\n  );\n};\n\nexport default ColorInput;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,UAAU,GAAG,QAA0D;EAAA,IAAzD;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,UAAU;IAAEC;EAAc,CAAC;EACtE,oBACE;IAAM,QAAQ,EAAGC,CAAC,IAAKA,CAAC,CAACC,cAAc,EAAG;IAAA,wBACxC;MAAA,UAAO;IAAU;MAAA;MAAA;MAAA;IAAA,QAAQ,eACzB;MACE,IAAI,EAAC,MAAM;MACX,WAAW,EAAC,YAAY;MACxB,QAAQ;MACR,KAAK,EAAEL,QAAS;MAChB,QAAQ,EAAGI,CAAC,IAAK;QACfH,WAAW,CAACG,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;MAC7B;IAAE;MAAA;MAAA;MAAA;IAAA,QACF,eACF;MAAQ,IAAI,EAAC,QAAQ;MAAC,EAAE,EAAC,UAAU;MAAC,OAAO,EAAE,MAAMJ,aAAa,CAAC,CAACD,UAAU,CAAE;MAAA,UAAC;IAE/E;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEX,CAAC;AAAC,KAlBIH,UAAU;AAoBhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}